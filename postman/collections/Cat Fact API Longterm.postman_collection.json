{
	"info": {
		"_postman_id": "2b77650f-41fe-486d-84e5-23c2e876cacd",
		"name": "Cat Fact API Longterm",
		"description": "<img src=\"https://content.pstmn.io/40db1fd2-2228-4bea-9dc5-57764b27f28b/aW1hZ2UucG5n\">\n\n# Cat Facts - The API about Cats\n\nYou've probably seen this API in action on your favorite social media platform, or you may even be subscribed to our fascinating daily service! Now you can leverage this Postman collection and our OpenAPI 3.0 specification to embed CatFacts in your own products and servicess.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23889826",
		"_collection_link": "https://v10-technical-enablement.postman.co/workspace/BRKC-v10-Workspace~ee0091de-9dad-419f-9421-fc3e170f9424/collection/23889826-2b77650f-41fe-486d-84e5-23c2e876cacd?action=share&creator=23889826&source=collection_link"
	},
	"item": [
		{
			"name": "Facts",
			"item": [
				{
					"name": "Get a list of facts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 800ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(800);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test('Length is a number', () => {",
									"    _.each(jsonData, (item) => {",
									"        pm.expect(typeof item[\"length\"]).to.equal('number');",
									"    })",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/facts?max_length=200&limit=2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"facts"
							],
							"query": [
								{
									"key": "max_length",
									"value": "200"
								},
								{
									"key": "limit",
									"value": "2",
									"description": "limit the amount of results returned"
								}
							]
						},
						"description": "Returns a a list of facts about cats"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://16ab538c-73db-496c-8972-eba749d42e37.mock.pstmn.io/facts?max_length=200&limit=2",
									"protocol": "https",
									"host": [
										"16ab538c-73db-496c-8972-eba749d42e37",
										"mock",
										"pstmn",
										"io"
									],
									"path": [
										"facts"
									],
									"query": [
										{
											"key": "max_length",
											"value": "200"
										},
										{
											"key": "limit",
											"value": "2",
											"description": "limit the amount of results returned"
										}
									]
								},
								"description": "Returns a a list of facts"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"fact\": \"<string>\",\n    \"length\": 200\n  },\n  {\n    \"fact\": \"<string>\",\n    \"length\": 200\n  }\n]"
						},
						{
							"name": "Get a list of facts",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/facts?max_length=200&limit=2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"facts"
									],
									"query": [
										{
											"key": "max_length",
											"value": "200"
										},
										{
											"key": "limit",
											"value": "2",
											"description": "limit the amount of results returned"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": "{\n    \"result\":\"Sorry, an error occurred\"\n}"
						}
					]
				}
			],
			"description": "CatFacts can deliver multiple facts in a single call!"
		},
		{
			"name": "fact",
			"item": [
				{
					"name": "get Random Fact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 800ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(800);",
									"});",
									"",
									"pm.test(\"Response contains fact\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.fact).to.exist;",
									"});",
									"",
									"pm.test(\"Fact element is not null or zero-length\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.fact).to.not.be.null;",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/fact?max_length=300",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"fact"
							],
							"query": [
								{
									"key": "max_length",
									"value": "300",
									"description": "maximum length of returned fact"
								}
							]
						},
						"description": "Returns a random fact"
					},
					"response": [
						{
							"name": "Normal response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/fact?max_length=200",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"fact"
									],
									"query": [
										{
											"key": "max_length",
											"value": "200",
											"description": "maximum length of returned fact"
										}
									]
								},
								"description": "Returns a random fact"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"fact\": \"<string>\",\n  \"length\": 200\n}"
						},
						{
							"name": "Fact not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/fact?max_length=200",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"fact"
									],
									"query": [
										{
											"key": "max_length",
											"value": "200",
											"description": "maximum length of returned fact"
										}
									]
								},
								"description": "Returns a random fact"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "get Random Fact Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 800ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(800);",
									"});",
									"",
									"pm.test(\"Response contains fact\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.fact).to.exist;",
									"});",
									"",
									"pm.test(\"Fact element is not null or zero-length\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.fact).to.not.be.null;",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/fact?max_length=300",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"fact"
							],
							"query": [
								{
									"key": "max_length",
									"value": "300",
									"description": "maximum length of returned fact"
								}
							]
						},
						"description": "Returns a random fact"
					},
					"response": [
						{
							"name": "Normal response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/fact?max_length=200",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"fact"
									],
									"query": [
										{
											"key": "max_length",
											"value": "200",
											"description": "maximum length of returned fact"
										}
									]
								},
								"description": "Returns a random fact"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"fact\": \"<string>\",\n  \"length\": 200,\n  \"length-provided\": {{$queryParams 'max_length'}}\n}"
						},
						{
							"name": "Fact not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/fact?max_length=200",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"fact"
									],
									"query": [
										{
											"key": "max_length",
											"value": "200",
											"description": "maximum length of returned fact"
										}
									]
								},
								"description": "Returns a random fact"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				}
			]
		},
		{
			"name": "breeds",
			"item": [
				{
					"name": "get Breeds",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/breeds?limit=2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"breeds"
							],
							"query": [
								{
									"key": "limit",
									"value": "2",
									"description": "This is a description"
								}
							]
						},
						"description": "Returns a a list of breeds"
					},
					"response": [
						{
							"name": "Normal operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/breeds?limit=2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"breeds"
									],
									"query": [
										{
											"key": "limit",
											"value": "2",
											"description": "This is a description"
										}
									]
								},
								"description": "Returns a a list of breeds"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"breed\": \"<string>\",\n    \"country\": \"<string>\",\n    \"origin\": \"<string>\",\n    \"coat\": \"<string>\",\n    \"pattern\": \"<string>\"\n  },\n  {\n    \"breed\": \"<string>\",\n    \"country\": \"<string>\",\n    \"origin\": \"<string>\",\n    \"coat\": \"<string>\",\n    \"pattern\": \"<string>\"\n  }\n]"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://5cd614ba-1b51-4800-8f80-d2776eeb57e7.mock.pstmn.io"
		}
	]
}